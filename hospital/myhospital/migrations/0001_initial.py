# Generated by Django 3.2.3 on 2021-06-08 06:24

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_nurse', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='complain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complainant', models.CharField(max_length=50)),
                ('complainant_last', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField()),
                ('reason', models.TextField()),
                ('details', models.TextField()),
                ('message', models.TextField()),
                ('file', models.FileField(upload_to='')),
                ('gender', models.CharField(max_length=50)),
                ('user_type', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Doctors_qualification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('id_doctor', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Doctors_spiciality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('id_doctor', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='medical_company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('market_name', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.CharField(max_length=20)),
                ('engineer_name', models.CharField(max_length=100)),
                ('engineer_phone', models.CharField(max_length=20)),
                ('PPM_date', models.DateTimeField()),
                ('caliberation_date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='patient_appointment_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_place', models.CharField(max_length=255)),
                ('appointment_time', models.PositiveIntegerField()),
                ('id_doctor', models.PositiveIntegerField()),
                ('id_patient', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='test',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_type', models.CharField(max_length=100)),
                ('cost', models.PositiveIntegerField()),
                ('average_time', models.PositiveIntegerField()),
                ('id_patient', models.PositiveIntegerField()),
                ('id_medical_device', models.PositiveIntegerField()),
                ('id_doctor', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='nurse',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myhospital.user')),
                ('first_name', models.CharField(max_length=50)),
                ('second_name', models.CharField(max_length=50)),
                ('third_name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField()),
                ('salary', models.PositiveIntegerField()),
                ('shift', models.PositiveIntegerField()),
                ('address', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='patient',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myhospital.user')),
                ('name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField()),
                ('medical_report', models.TextField()),
                ('email', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('patient_bill', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='medical_device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('last_PPM_date', models.DateTimeField()),
                ('last_caliberation_date', models.DateTimeField()),
                ('fk_market_name', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='myhospital.medical_company')),
            ],
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='myhospital.user')),
                ('first_name', models.CharField(max_length=50)),
                ('second_name', models.CharField(max_length=50)),
                ('third_name', models.CharField(max_length=50)),
                ('gender', models.CharField(max_length=50)),
                ('age', models.PositiveSmallIntegerField()),
                ('salary', models.PositiveIntegerField()),
                ('email', models.CharField(max_length=255)),
                ('address', models.CharField(max_length=255)),
                ('phone', models.CharField(max_length=20)),
                ('shift', models.IntegerField()),
                ('patients', models.ManyToManyField(blank=True, related_name='treated_patients', to='myhospital.patient')),
            ],
        ),
        migrations.CreateModel(
            name='account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_name', models.CharField(max_length=100)),
                ('password', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=50)),
                ('fk_doctor', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='myhospital.doctor')),
                ('fk_nurse', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='myhospital.nurse')),
                ('fk_patient', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='myhospital.patient')),
            ],
        ),
    ]
